[
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "messagebox",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "filedialog",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "sqlite3",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlite3",
        "description": "sqlite3",
        "detail": "sqlite3",
        "documentation": {}
    },
    {
        "label": "disable",
        "importPath": "gc",
        "description": "gc",
        "isExtraImport": true,
        "detail": "gc",
        "documentation": {}
    },
    {
        "label": "disable",
        "importPath": "gc",
        "description": "gc",
        "isExtraImport": true,
        "detail": "gc",
        "documentation": {}
    },
    {
        "label": "RadioButton",
        "importPath": "msilib.schema",
        "description": "msilib.schema",
        "isExtraImport": true,
        "detail": "msilib.schema",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "1-pack",
        "description": "1-pack",
        "peekOfCode": "root = Tk()\n# Creating a Label Widget\nmyLabel = Label(root, text=\"tkinter\")\n# Display it on screen\nmyLabel.pack()\nroot.mainloop()",
        "detail": "1-pack",
        "documentation": {}
    },
    {
        "label": "myLabel",
        "kind": 5,
        "importPath": "1-pack",
        "description": "1-pack",
        "peekOfCode": "myLabel = Label(root, text=\"tkinter\")\n# Display it on screen\nmyLabel.pack()\nroot.mainloop()",
        "detail": "1-pack",
        "documentation": {}
    },
    {
        "label": "popup",
        "kind": 2,
        "importPath": "10-message-boxes",
        "description": "10-message-boxes",
        "peekOfCode": "def popup():\n    response = messagebox.askyesno(\"Message box\", 'Yes/No')\n    # Label(root, text=response).pack()\n    if response == 1:\n        Label(root, text=f'You made a Positive Response : {response}').pack()\n    else:\n        Label(root, text=f'You made a Negative Response : {response}').pack()\nButton(root, text='Popup', command=popup).pack()\nroot.mainloop()",
        "detail": "10-message-boxes",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "10-message-boxes",
        "description": "10-message-boxes",
        "peekOfCode": "root = Tk()\nroot.title('Message boxes')\nroot.iconbitmap('./icons/codemy.ico')\n# messagebox.showinfo(\"Message box\", 'Info')\n# messagebox.showwarning(\"Message box\", 'Warning')\n# messagebox.showerror(\"Message box\", 'Error')\n# messagebox.askquestion(\"Message box\", 'Question')\n# messagebox.askokcancel(\"Message box\", 'Ok/Cancel')\n# messagebox.askyesno(\"Message box\", 'Yes/No')\ndef popup():",
        "detail": "10-message-boxes",
        "documentation": {}
    },
    {
        "label": "openWindow",
        "kind": 2,
        "importPath": "11-create-window",
        "description": "11-create-window",
        "peekOfCode": "def openWindow():\n    top = Toplevel()\n    top.title('Create new Windows')\n    top.iconbitmap('./icons/codemy.ico')\n    global my_img\n    my_img = ImageTk.PhotoImage(Image.open('./images/python-tkinter.jpg'))\n    my_label = Label(top, image=my_img).pack()\n    closeWindowBtn = Button(top, text='Exit', command=top.destroy).pack()\nopenWindowBtn = Button(root, text='Open Window', command=openWindow).pack()\nroot.mainloop()",
        "detail": "11-create-window",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "11-create-window",
        "description": "11-create-window",
        "peekOfCode": "root = Tk()\nroot.title('Create new Windows')\nroot.iconbitmap('./icons/codemy.ico')\ndef openWindow():\n    top = Toplevel()\n    top.title('Create new Windows')\n    top.iconbitmap('./icons/codemy.ico')\n    global my_img\n    my_img = ImageTk.PhotoImage(Image.open('./images/python-tkinter.jpg'))\n    my_label = Label(top, image=my_img).pack()",
        "detail": "11-create-window",
        "documentation": {}
    },
    {
        "label": "openWindowBtn",
        "kind": 5,
        "importPath": "11-create-window",
        "description": "11-create-window",
        "peekOfCode": "openWindowBtn = Button(root, text='Open Window', command=openWindow).pack()\nroot.mainloop()",
        "detail": "11-create-window",
        "documentation": {}
    },
    {
        "label": "open",
        "kind": 2,
        "importPath": "12-file-dialog",
        "description": "12-file-dialog",
        "peekOfCode": "def open():\n    global my_image\n    root.filename = filedialog.askopenfilename(\n        initialdir=\"/images\", title=\"Select A File\", filetypes=((\"jpg files\", \"*.jpg\"), (\"all files\", \"*.*\")))\n    my_label = Label(root, text=root.filename).pack()\n    my_image = ImageTk.PhotoImage(Image.open(root.filename))\n    my_image_label = Label(image=my_image).pack()\nmy_btn = Button(root, text=\"Open File\", command=open).pack()\nroot.mainloop()",
        "detail": "12-file-dialog",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "12-file-dialog",
        "description": "12-file-dialog",
        "peekOfCode": "root = Tk()\nroot.title('File Dialog')\nroot.iconbitmap('./icons/codemy.ico')\ndef open():\n    global my_image\n    root.filename = filedialog.askopenfilename(\n        initialdir=\"/images\", title=\"Select A File\", filetypes=((\"jpg files\", \"*.jpg\"), (\"all files\", \"*.*\")))\n    my_label = Label(root, text=root.filename).pack()\n    my_image = ImageTk.PhotoImage(Image.open(root.filename))\n    my_image_label = Label(image=my_image).pack()",
        "detail": "12-file-dialog",
        "documentation": {}
    },
    {
        "label": "my_btn",
        "kind": 5,
        "importPath": "12-file-dialog",
        "description": "12-file-dialog",
        "peekOfCode": "my_btn = Button(root, text=\"Open File\", command=open).pack()\nroot.mainloop()",
        "detail": "12-file-dialog",
        "documentation": {}
    },
    {
        "label": "slide",
        "kind": 2,
        "importPath": "13-slider",
        "description": "13-slider",
        "peekOfCode": "def slide(value):\n    horizontal_label = Label(\n        root, text=f'Horizontal:{horizontal.get()}').pack()\n    vertical_label = Label(root, text=f'Vertical:{vertical.get()}').pack()\nvertical = Scale(root, from_=0, to=100)\nvertical.pack()\nhorizontal = Scale(root, from_=0, to=100, orient=HORIZONTAL, command=slide)\nhorizontal.pack()\n# horizontal_label = Label(root, text=horizontal.get()).pack()\n# vertical_label = Label(root, text=vertical.get()).pack()",
        "detail": "13-slider",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "13-slider",
        "description": "13-slider",
        "peekOfCode": "root = Tk()\nroot.title('File Dialog')\nroot.iconbitmap('./icons/codemy.ico')\nroot.geometry(\"500x500\")\ndef slide(value):\n    horizontal_label = Label(\n        root, text=f'Horizontal:{horizontal.get()}').pack()\n    vertical_label = Label(root, text=f'Vertical:{vertical.get()}').pack()\nvertical = Scale(root, from_=0, to=100)\nvertical.pack()",
        "detail": "13-slider",
        "documentation": {}
    },
    {
        "label": "vertical",
        "kind": 5,
        "importPath": "13-slider",
        "description": "13-slider",
        "peekOfCode": "vertical = Scale(root, from_=0, to=100)\nvertical.pack()\nhorizontal = Scale(root, from_=0, to=100, orient=HORIZONTAL, command=slide)\nhorizontal.pack()\n# horizontal_label = Label(root, text=horizontal.get()).pack()\n# vertical_label = Label(root, text=vertical.get()).pack()\nmy_btn = Button(root, text=\"Click\", command=slide).pack()\nroot.mainloop()",
        "detail": "13-slider",
        "documentation": {}
    },
    {
        "label": "horizontal",
        "kind": 5,
        "importPath": "13-slider",
        "description": "13-slider",
        "peekOfCode": "horizontal = Scale(root, from_=0, to=100, orient=HORIZONTAL, command=slide)\nhorizontal.pack()\n# horizontal_label = Label(root, text=horizontal.get()).pack()\n# vertical_label = Label(root, text=vertical.get()).pack()\nmy_btn = Button(root, text=\"Click\", command=slide).pack()\nroot.mainloop()",
        "detail": "13-slider",
        "documentation": {}
    },
    {
        "label": "my_btn",
        "kind": 5,
        "importPath": "13-slider",
        "description": "13-slider",
        "peekOfCode": "my_btn = Button(root, text=\"Click\", command=slide).pack()\nroot.mainloop()",
        "detail": "13-slider",
        "documentation": {}
    },
    {
        "label": "show",
        "kind": 2,
        "importPath": "14-checkboxes",
        "description": "14-checkboxes",
        "peekOfCode": "def show():\n    myLabel = Label(root, text=var.get()).pack()\nvar = StringVar()\nc = Checkbutton(root, text=\"SuperSize? RegularSize\",\n                variable=var, onvalue=\"SuperSize\", offvalue=\"RegularSize\")\nc.deselect()\nc.pack()\nmyButton = Button(root, text=\"Show Selection\", command=show).pack()\nroot.mainloop()",
        "detail": "14-checkboxes",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "14-checkboxes",
        "description": "14-checkboxes",
        "peekOfCode": "root = Tk()\nroot.title('Checkboxes')\nroot.iconbitmap('./icons/codemy.ico')\nroot.geometry(\"200x200\")\ndef show():\n    myLabel = Label(root, text=var.get()).pack()\nvar = StringVar()\nc = Checkbutton(root, text=\"SuperSize? RegularSize\",\n                variable=var, onvalue=\"SuperSize\", offvalue=\"RegularSize\")\nc.deselect()",
        "detail": "14-checkboxes",
        "documentation": {}
    },
    {
        "label": "var",
        "kind": 5,
        "importPath": "14-checkboxes",
        "description": "14-checkboxes",
        "peekOfCode": "var = StringVar()\nc = Checkbutton(root, text=\"SuperSize? RegularSize\",\n                variable=var, onvalue=\"SuperSize\", offvalue=\"RegularSize\")\nc.deselect()\nc.pack()\nmyButton = Button(root, text=\"Show Selection\", command=show).pack()\nroot.mainloop()",
        "detail": "14-checkboxes",
        "documentation": {}
    },
    {
        "label": "c",
        "kind": 5,
        "importPath": "14-checkboxes",
        "description": "14-checkboxes",
        "peekOfCode": "c = Checkbutton(root, text=\"SuperSize? RegularSize\",\n                variable=var, onvalue=\"SuperSize\", offvalue=\"RegularSize\")\nc.deselect()\nc.pack()\nmyButton = Button(root, text=\"Show Selection\", command=show).pack()\nroot.mainloop()",
        "detail": "14-checkboxes",
        "documentation": {}
    },
    {
        "label": "myButton",
        "kind": 5,
        "importPath": "14-checkboxes",
        "description": "14-checkboxes",
        "peekOfCode": "myButton = Button(root, text=\"Show Selection\", command=show).pack()\nroot.mainloop()",
        "detail": "14-checkboxes",
        "documentation": {}
    },
    {
        "label": "show",
        "kind": 2,
        "importPath": "15-dropdown-menu",
        "description": "15-dropdown-menu",
        "peekOfCode": "def show():\n    myLabel = Label(root, text=clicked.get()).pack()\noptions = [\"Monday\", \"Tuesday\",\n           \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\ndrop = OptionMenu(root, clicked, *options)\ndrop.pack()\nmyButton = Button(root, text=\"Show Selection\", command=show).pack()\nroot.mainloop()",
        "detail": "15-dropdown-menu",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "15-dropdown-menu",
        "description": "15-dropdown-menu",
        "peekOfCode": "root = Tk()\nroot.title('DropDown Menu')\nroot.iconbitmap('./icons/codemy.ico')\nroot.geometry(\"200x200\")\nclicked = StringVar()\nclicked.set(\"Sunday\")\ndef show():\n    myLabel = Label(root, text=clicked.get()).pack()\noptions = [\"Monday\", \"Tuesday\",\n           \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]",
        "detail": "15-dropdown-menu",
        "documentation": {}
    },
    {
        "label": "clicked",
        "kind": 5,
        "importPath": "15-dropdown-menu",
        "description": "15-dropdown-menu",
        "peekOfCode": "clicked = StringVar()\nclicked.set(\"Sunday\")\ndef show():\n    myLabel = Label(root, text=clicked.get()).pack()\noptions = [\"Monday\", \"Tuesday\",\n           \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\ndrop = OptionMenu(root, clicked, *options)\ndrop.pack()\nmyButton = Button(root, text=\"Show Selection\", command=show).pack()\nroot.mainloop()",
        "detail": "15-dropdown-menu",
        "documentation": {}
    },
    {
        "label": "options",
        "kind": 5,
        "importPath": "15-dropdown-menu",
        "description": "15-dropdown-menu",
        "peekOfCode": "options = [\"Monday\", \"Tuesday\",\n           \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\ndrop = OptionMenu(root, clicked, *options)\ndrop.pack()\nmyButton = Button(root, text=\"Show Selection\", command=show).pack()\nroot.mainloop()",
        "detail": "15-dropdown-menu",
        "documentation": {}
    },
    {
        "label": "drop",
        "kind": 5,
        "importPath": "15-dropdown-menu",
        "description": "15-dropdown-menu",
        "peekOfCode": "drop = OptionMenu(root, clicked, *options)\ndrop.pack()\nmyButton = Button(root, text=\"Show Selection\", command=show).pack()\nroot.mainloop()",
        "detail": "15-dropdown-menu",
        "documentation": {}
    },
    {
        "label": "myButton",
        "kind": 5,
        "importPath": "15-dropdown-menu",
        "description": "15-dropdown-menu",
        "peekOfCode": "myButton = Button(root, text=\"Show Selection\", command=show).pack()\nroot.mainloop()",
        "detail": "15-dropdown-menu",
        "documentation": {}
    },
    {
        "label": "update",
        "kind": 2,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "def update():\n    conn = sqlite3.connect('address_book.db')\n    c = conn.cursor()\n    record_id = delete_box.get()\n    c.execute(\"\"\"UPDATE addresses SET\n\t\tfirst_name = :first,\n\t\tlast_name = :last,\n\t\taddress = :address,\n\t\tcity = :city,\n\t\tstate = :state,",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "edit",
        "kind": 2,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "def edit():\n    root.withdraw()\n    global editor\n    editor = Tk()\n    editor.title('Update A Record')\n    editor.iconbitmap('c:/gui/codemy.ico')\n    editor.geometry(\"400x300\")\n    conn = sqlite3.connect('address_book.db')\n    c = conn.cursor()\n    record_id = delete_box.get()",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "delete",
        "kind": 2,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "def delete():\n    conn = sqlite3.connect('address_book.db')\n    c = conn.cursor()\n    c.execute(\"DELETE from addresses WHERE oid = \" + delete_box.get())\n    delete_box.delete(0, END)\n    conn.commit()\n    conn.close()\ndef submit():\n    conn = sqlite3.connect('address_book.db')\n    c = conn.cursor()",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "submit",
        "kind": 2,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "def submit():\n    conn = sqlite3.connect('address_book.db')\n    c = conn.cursor()\n    c.execute(\"INSERT INTO addresses VALUES (:f_name, :l_name, :address, :city, :state, :zipcode)\",\n              {\n                  'f_name': f_name.get(),\n                  'l_name': l_name.get(),\n                  'address': address.get(),\n                  'city': city.get(),\n                  'state': state.get(),",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "query",
        "kind": 2,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "def query():\n    conn = sqlite3.connect('address_book.db')\n    c = conn.cursor()\n    c.execute(\"SELECT *, oid FROM addresses\")\n    records = c.fetchall()\n    print_records = ''\n    for record in records:\n        print_records += str(record[0]) + \" \" + \\\n            str(record[1]) + \" \" + \"\\t\" + str(record[6]) + \"\\n\"\n    query_label = Label(root, text=print_records)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "root = Tk()\nroot.title('Using Databases')\nroot.iconbitmap('./icons/codemy.ico')\nroot.geometry(\"400x600\")\n# Databases\nconn = sqlite3.connect('address_book.db')\nc = conn.cursor()\n# c.execute(\"\"\"CREATE TABLE addresses (\n# \t\tfirst_name text,\n# \t\tlast_name text,",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "conn",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "conn = sqlite3.connect('address_book.db')\nc = conn.cursor()\n# c.execute(\"\"\"CREATE TABLE addresses (\n# \t\tfirst_name text,\n# \t\tlast_name text,\n# \t\taddress text,\n# \t\tcity text,\n# \t\tstate text,\n# \t\tzipcode integer\n# \t\t)\"\"\")",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "c",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "c = conn.cursor()\n# c.execute(\"\"\"CREATE TABLE addresses (\n# \t\tfirst_name text,\n# \t\tlast_name text,\n# \t\taddress text,\n# \t\tcity text,\n# \t\tstate text,\n# \t\tzipcode integer\n# \t\t)\"\"\")\ndef update():",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "\t\tfirst_name",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "\t\tfirst_name = :first,\n\t\tlast_name = :last,\n\t\taddress = :address,\n\t\tcity = :city,\n\t\tstate = :state,\n\t\tzipcode = :zipcode \n\t\tWHERE oid = :oid\"\"\",\n              {\n                  'first': f_name_editor.get(),\n                  'last': l_name_editor.get(),",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "\t\tlast_name",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "\t\tlast_name = :last,\n\t\taddress = :address,\n\t\tcity = :city,\n\t\tstate = :state,\n\t\tzipcode = :zipcode \n\t\tWHERE oid = :oid\"\"\",\n              {\n                  'first': f_name_editor.get(),\n                  'last': l_name_editor.get(),\n                  'address': address_editor.get(),",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "\t\taddress",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "\t\taddress = :address,\n\t\tcity = :city,\n\t\tstate = :state,\n\t\tzipcode = :zipcode \n\t\tWHERE oid = :oid\"\"\",\n              {\n                  'first': f_name_editor.get(),\n                  'last': l_name_editor.get(),\n                  'address': address_editor.get(),\n                  'city': city_editor.get(),",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "\t\tcity",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "\t\tcity = :city,\n\t\tstate = :state,\n\t\tzipcode = :zipcode \n\t\tWHERE oid = :oid\"\"\",\n              {\n                  'first': f_name_editor.get(),\n                  'last': l_name_editor.get(),\n                  'address': address_editor.get(),\n                  'city': city_editor.get(),\n                  'state': state_editor.get(),",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "\t\tstate",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "\t\tstate = :state,\n\t\tzipcode = :zipcode \n\t\tWHERE oid = :oid\"\"\",\n              {\n                  'first': f_name_editor.get(),\n                  'last': l_name_editor.get(),\n                  'address': address_editor.get(),\n                  'city': city_editor.get(),\n                  'state': state_editor.get(),\n                  'zipcode': zipcode_editor.get(),",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "\t\tzipcode",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "\t\tzipcode = :zipcode \n\t\tWHERE oid = :oid\"\"\",\n              {\n                  'first': f_name_editor.get(),\n                  'last': l_name_editor.get(),\n                  'address': address_editor.get(),\n                  'city': city_editor.get(),\n                  'state': state_editor.get(),\n                  'zipcode': zipcode_editor.get(),\n                  'oid': record_id",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "f_name",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "f_name = Entry(root, width=30)\nf_name.grid(row=0, column=1, padx=20, pady=(10, 0))\nl_name = Entry(root, width=30)\nl_name.grid(row=1, column=1)\naddress = Entry(root, width=30)\naddress.grid(row=2, column=1)\ncity = Entry(root, width=30)\ncity.grid(row=3, column=1)\nstate = Entry(root, width=30)\nstate.grid(row=4, column=1)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "l_name",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "l_name = Entry(root, width=30)\nl_name.grid(row=1, column=1)\naddress = Entry(root, width=30)\naddress.grid(row=2, column=1)\ncity = Entry(root, width=30)\ncity.grid(row=3, column=1)\nstate = Entry(root, width=30)\nstate.grid(row=4, column=1)\nzipcode = Entry(root, width=30)\nzipcode.grid(row=5, column=1)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "address",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "address = Entry(root, width=30)\naddress.grid(row=2, column=1)\ncity = Entry(root, width=30)\ncity.grid(row=3, column=1)\nstate = Entry(root, width=30)\nstate.grid(row=4, column=1)\nzipcode = Entry(root, width=30)\nzipcode.grid(row=5, column=1)\ndelete_box = Entry(root, width=30)\ndelete_box.grid(row=9, column=1, pady=5)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "city",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "city = Entry(root, width=30)\ncity.grid(row=3, column=1)\nstate = Entry(root, width=30)\nstate.grid(row=4, column=1)\nzipcode = Entry(root, width=30)\nzipcode.grid(row=5, column=1)\ndelete_box = Entry(root, width=30)\ndelete_box.grid(row=9, column=1, pady=5)\nf_name_label = Label(root, text=\"First Name\")\nf_name_label.grid(row=0, column=0, pady=(10, 0))",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "state",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "state = Entry(root, width=30)\nstate.grid(row=4, column=1)\nzipcode = Entry(root, width=30)\nzipcode.grid(row=5, column=1)\ndelete_box = Entry(root, width=30)\ndelete_box.grid(row=9, column=1, pady=5)\nf_name_label = Label(root, text=\"First Name\")\nf_name_label.grid(row=0, column=0, pady=(10, 0))\nl_name_label = Label(root, text=\"Last Name\")\nl_name_label.grid(row=1, column=0)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "zipcode",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "zipcode = Entry(root, width=30)\nzipcode.grid(row=5, column=1)\ndelete_box = Entry(root, width=30)\ndelete_box.grid(row=9, column=1, pady=5)\nf_name_label = Label(root, text=\"First Name\")\nf_name_label.grid(row=0, column=0, pady=(10, 0))\nl_name_label = Label(root, text=\"Last Name\")\nl_name_label.grid(row=1, column=0)\naddress_label = Label(root, text=\"Address\")\naddress_label.grid(row=2, column=0)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "delete_box",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "delete_box = Entry(root, width=30)\ndelete_box.grid(row=9, column=1, pady=5)\nf_name_label = Label(root, text=\"First Name\")\nf_name_label.grid(row=0, column=0, pady=(10, 0))\nl_name_label = Label(root, text=\"Last Name\")\nl_name_label.grid(row=1, column=0)\naddress_label = Label(root, text=\"Address\")\naddress_label.grid(row=2, column=0)\ncity_label = Label(root, text=\"City\")\ncity_label.grid(row=3, column=0)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "f_name_label",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "f_name_label = Label(root, text=\"First Name\")\nf_name_label.grid(row=0, column=0, pady=(10, 0))\nl_name_label = Label(root, text=\"Last Name\")\nl_name_label.grid(row=1, column=0)\naddress_label = Label(root, text=\"Address\")\naddress_label.grid(row=2, column=0)\ncity_label = Label(root, text=\"City\")\ncity_label.grid(row=3, column=0)\nstate_label = Label(root, text=\"State\")\nstate_label.grid(row=4, column=0)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "l_name_label",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "l_name_label = Label(root, text=\"Last Name\")\nl_name_label.grid(row=1, column=0)\naddress_label = Label(root, text=\"Address\")\naddress_label.grid(row=2, column=0)\ncity_label = Label(root, text=\"City\")\ncity_label.grid(row=3, column=0)\nstate_label = Label(root, text=\"State\")\nstate_label.grid(row=4, column=0)\nzipcode_label = Label(root, text=\"Zipcode\")\nzipcode_label.grid(row=5, column=0)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "address_label",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "address_label = Label(root, text=\"Address\")\naddress_label.grid(row=2, column=0)\ncity_label = Label(root, text=\"City\")\ncity_label.grid(row=3, column=0)\nstate_label = Label(root, text=\"State\")\nstate_label.grid(row=4, column=0)\nzipcode_label = Label(root, text=\"Zipcode\")\nzipcode_label.grid(row=5, column=0)\ndelete_box_label = Label(root, text=\"Select ID\")\ndelete_box_label.grid(row=9, column=0, pady=5)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "city_label",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "city_label = Label(root, text=\"City\")\ncity_label.grid(row=3, column=0)\nstate_label = Label(root, text=\"State\")\nstate_label.grid(row=4, column=0)\nzipcode_label = Label(root, text=\"Zipcode\")\nzipcode_label.grid(row=5, column=0)\ndelete_box_label = Label(root, text=\"Select ID\")\ndelete_box_label.grid(row=9, column=0, pady=5)\nsubmit_btn = Button(root, text=\"Add Record To Database\", command=submit)\nsubmit_btn.grid(row=6, column=0, columnspan=2, pady=10, padx=10, ipadx=100)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "state_label",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "state_label = Label(root, text=\"State\")\nstate_label.grid(row=4, column=0)\nzipcode_label = Label(root, text=\"Zipcode\")\nzipcode_label.grid(row=5, column=0)\ndelete_box_label = Label(root, text=\"Select ID\")\ndelete_box_label.grid(row=9, column=0, pady=5)\nsubmit_btn = Button(root, text=\"Add Record To Database\", command=submit)\nsubmit_btn.grid(row=6, column=0, columnspan=2, pady=10, padx=10, ipadx=100)\nquery_btn = Button(root, text=\"Show Records\", command=query)\nquery_btn.grid(row=7, column=0, columnspan=2, pady=10, padx=10, ipadx=137)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "zipcode_label",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "zipcode_label = Label(root, text=\"Zipcode\")\nzipcode_label.grid(row=5, column=0)\ndelete_box_label = Label(root, text=\"Select ID\")\ndelete_box_label.grid(row=9, column=0, pady=5)\nsubmit_btn = Button(root, text=\"Add Record To Database\", command=submit)\nsubmit_btn.grid(row=6, column=0, columnspan=2, pady=10, padx=10, ipadx=100)\nquery_btn = Button(root, text=\"Show Records\", command=query)\nquery_btn.grid(row=7, column=0, columnspan=2, pady=10, padx=10, ipadx=137)\ndelete_btn = Button(root, text=\"Delete Record\", command=delete)\ndelete_btn.grid(row=10, column=0, columnspan=2, pady=10, padx=10, ipadx=136)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "delete_box_label",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "delete_box_label = Label(root, text=\"Select ID\")\ndelete_box_label.grid(row=9, column=0, pady=5)\nsubmit_btn = Button(root, text=\"Add Record To Database\", command=submit)\nsubmit_btn.grid(row=6, column=0, columnspan=2, pady=10, padx=10, ipadx=100)\nquery_btn = Button(root, text=\"Show Records\", command=query)\nquery_btn.grid(row=7, column=0, columnspan=2, pady=10, padx=10, ipadx=137)\ndelete_btn = Button(root, text=\"Delete Record\", command=delete)\ndelete_btn.grid(row=10, column=0, columnspan=2, pady=10, padx=10, ipadx=136)\nedit_btn = Button(root, text=\"Edit Record\", command=edit)\nedit_btn.grid(row=11, column=0, columnspan=2, pady=10, padx=10, ipadx=143)",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "submit_btn",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "submit_btn = Button(root, text=\"Add Record To Database\", command=submit)\nsubmit_btn.grid(row=6, column=0, columnspan=2, pady=10, padx=10, ipadx=100)\nquery_btn = Button(root, text=\"Show Records\", command=query)\nquery_btn.grid(row=7, column=0, columnspan=2, pady=10, padx=10, ipadx=137)\ndelete_btn = Button(root, text=\"Delete Record\", command=delete)\ndelete_btn.grid(row=10, column=0, columnspan=2, pady=10, padx=10, ipadx=136)\nedit_btn = Button(root, text=\"Edit Record\", command=edit)\nedit_btn.grid(row=11, column=0, columnspan=2, pady=10, padx=10, ipadx=143)\nconn.commit()\nconn.close()",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "query_btn",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "query_btn = Button(root, text=\"Show Records\", command=query)\nquery_btn.grid(row=7, column=0, columnspan=2, pady=10, padx=10, ipadx=137)\ndelete_btn = Button(root, text=\"Delete Record\", command=delete)\ndelete_btn.grid(row=10, column=0, columnspan=2, pady=10, padx=10, ipadx=136)\nedit_btn = Button(root, text=\"Edit Record\", command=edit)\nedit_btn.grid(row=11, column=0, columnspan=2, pady=10, padx=10, ipadx=143)\nconn.commit()\nconn.close()\nroot.mainloop()",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "delete_btn",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "delete_btn = Button(root, text=\"Delete Record\", command=delete)\ndelete_btn.grid(row=10, column=0, columnspan=2, pady=10, padx=10, ipadx=136)\nedit_btn = Button(root, text=\"Edit Record\", command=edit)\nedit_btn.grid(row=11, column=0, columnspan=2, pady=10, padx=10, ipadx=143)\nconn.commit()\nconn.close()\nroot.mainloop()",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "edit_btn",
        "kind": 5,
        "importPath": "16-using-database",
        "description": "16-using-database",
        "peekOfCode": "edit_btn = Button(root, text=\"Edit Record\", command=edit)\nedit_btn.grid(row=11, column=0, columnspan=2, pady=10, padx=10, ipadx=143)\nconn.commit()\nconn.close()\nroot.mainloop()",
        "detail": "16-using-database",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "2-grid",
        "description": "2-grid",
        "peekOfCode": "root = Tk()\n# Creating a Label Widget\nmyLabel1 = Label(root, text=\"tkinter\")\nmyLabel2 = Label(root, text=\"chandravaibhav98\")\n# Display it on screen\nmyLabel1.grid(row=0, column=0)\nmyLabel2.grid(row=1, column=1)\n# ---OR---\nmyLabel3 = Label(root, text=\"2-grid\").grid(row=1, column=0)\nmyLabel4 = Label(root, text=\"Python\").grid(row=2, column=1)",
        "detail": "2-grid",
        "documentation": {}
    },
    {
        "label": "myLabel1",
        "kind": 5,
        "importPath": "2-grid",
        "description": "2-grid",
        "peekOfCode": "myLabel1 = Label(root, text=\"tkinter\")\nmyLabel2 = Label(root, text=\"chandravaibhav98\")\n# Display it on screen\nmyLabel1.grid(row=0, column=0)\nmyLabel2.grid(row=1, column=1)\n# ---OR---\nmyLabel3 = Label(root, text=\"2-grid\").grid(row=1, column=0)\nmyLabel4 = Label(root, text=\"Python\").grid(row=2, column=1)\nroot.mainloop()",
        "detail": "2-grid",
        "documentation": {}
    },
    {
        "label": "myLabel2",
        "kind": 5,
        "importPath": "2-grid",
        "description": "2-grid",
        "peekOfCode": "myLabel2 = Label(root, text=\"chandravaibhav98\")\n# Display it on screen\nmyLabel1.grid(row=0, column=0)\nmyLabel2.grid(row=1, column=1)\n# ---OR---\nmyLabel3 = Label(root, text=\"2-grid\").grid(row=1, column=0)\nmyLabel4 = Label(root, text=\"Python\").grid(row=2, column=1)\nroot.mainloop()",
        "detail": "2-grid",
        "documentation": {}
    },
    {
        "label": "myLabel3",
        "kind": 5,
        "importPath": "2-grid",
        "description": "2-grid",
        "peekOfCode": "myLabel3 = Label(root, text=\"2-grid\").grid(row=1, column=0)\nmyLabel4 = Label(root, text=\"Python\").grid(row=2, column=1)\nroot.mainloop()",
        "detail": "2-grid",
        "documentation": {}
    },
    {
        "label": "myLabel4",
        "kind": 5,
        "importPath": "2-grid",
        "description": "2-grid",
        "peekOfCode": "myLabel4 = Label(root, text=\"Python\").grid(row=2, column=1)\nroot.mainloop()",
        "detail": "2-grid",
        "documentation": {}
    },
    {
        "label": "button1Click",
        "kind": 2,
        "importPath": "3-buttons",
        "description": "3-buttons",
        "peekOfCode": "def button1Click():\n    clickedLabel = Label(root, text=\"Thanks\")\n    clickedLabel.pack()\nbutton1 = Button(root, text=\"Click here\", padx=50,\n                 pady=50, command=button1Click)\nbutton1.pack()\nroot.mainloop()",
        "detail": "3-buttons",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "3-buttons",
        "description": "3-buttons",
        "peekOfCode": "root = Tk()\ndef button1Click():\n    clickedLabel = Label(root, text=\"Thanks\")\n    clickedLabel.pack()\nbutton1 = Button(root, text=\"Click here\", padx=50,\n                 pady=50, command=button1Click)\nbutton1.pack()\nroot.mainloop()",
        "detail": "3-buttons",
        "documentation": {}
    },
    {
        "label": "button1",
        "kind": 5,
        "importPath": "3-buttons",
        "description": "3-buttons",
        "peekOfCode": "button1 = Button(root, text=\"Click here\", padx=50,\n                 pady=50, command=button1Click)\nbutton1.pack()\nroot.mainloop()",
        "detail": "3-buttons",
        "documentation": {}
    },
    {
        "label": "button1Click",
        "kind": 2,
        "importPath": "4-input-fields",
        "description": "4-input-fields",
        "peekOfCode": "def button1Click():\n    hello = \"Hi \" + e.get()  # .get() input\n    clickedLabel = Label(root, text=hello)\n    clickedLabel.pack()\nbutton1 = Button(root, text=\"Click here\", padx=10,\n                 pady=10, command=button1Click)\nbutton1.pack()\nroot.mainloop()",
        "detail": "4-input-fields",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "4-input-fields",
        "description": "4-input-fields",
        "peekOfCode": "root = Tk()\ne = Entry(root, width=50, borderwidth=5)\ne.pack()\ne.insert(0, \"Enter Your Name\")  # Placeholder\ndef button1Click():\n    hello = \"Hi \" + e.get()  # .get() input\n    clickedLabel = Label(root, text=hello)\n    clickedLabel.pack()\nbutton1 = Button(root, text=\"Click here\", padx=10,\n                 pady=10, command=button1Click)",
        "detail": "4-input-fields",
        "documentation": {}
    },
    {
        "label": "e",
        "kind": 5,
        "importPath": "4-input-fields",
        "description": "4-input-fields",
        "peekOfCode": "e = Entry(root, width=50, borderwidth=5)\ne.pack()\ne.insert(0, \"Enter Your Name\")  # Placeholder\ndef button1Click():\n    hello = \"Hi \" + e.get()  # .get() input\n    clickedLabel = Label(root, text=hello)\n    clickedLabel.pack()\nbutton1 = Button(root, text=\"Click here\", padx=10,\n                 pady=10, command=button1Click)\nbutton1.pack()",
        "detail": "4-input-fields",
        "documentation": {}
    },
    {
        "label": "button1",
        "kind": 5,
        "importPath": "4-input-fields",
        "description": "4-input-fields",
        "peekOfCode": "button1 = Button(root, text=\"Click here\", padx=10,\n                 pady=10, command=button1Click)\nbutton1.pack()\nroot.mainloop()",
        "detail": "4-input-fields",
        "documentation": {}
    },
    {
        "label": "button_click",
        "kind": 2,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "def button_click(number):\n    # e.delete(0, END)\n    current = e.get()\n    e.delete(0, END)\n    e.insert(0, str(current) + str(number))\ndef button_clear():\n    e.delete(0, END)\ndef button_add():\n    first_number = e.get()\n    global f_num",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_clear",
        "kind": 2,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "def button_clear():\n    e.delete(0, END)\ndef button_add():\n    first_number = e.get()\n    global f_num\n    global math\n    math = \"addition\"\n    f_num = int(first_number)\n    e.delete(0, END)\ndef button_equal():",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_add",
        "kind": 2,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "def button_add():\n    first_number = e.get()\n    global f_num\n    global math\n    math = \"addition\"\n    f_num = int(first_number)\n    e.delete(0, END)\ndef button_equal():\n    second_number = e.get()\n    e.delete(0, END)",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_equal",
        "kind": 2,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "def button_equal():\n    second_number = e.get()\n    e.delete(0, END)\n    if math == \"addition\":\n        e.insert(0, f_num + int(second_number))\n    if math == \"subtraction\":\n        e.insert(0, f_num - int(second_number))\n    if math == \"multiplication\":\n        e.insert(0, f_num * int(second_number))\n    if math == \"division\":",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_subtract",
        "kind": 2,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "def button_subtract():\n    first_number = e.get()\n    global f_num\n    global math\n    math = \"subtraction\"\n    f_num = int(first_number)\n    e.delete(0, END)\ndef button_multiply():\n    first_number = e.get()\n    global f_num",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_multiply",
        "kind": 2,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "def button_multiply():\n    first_number = e.get()\n    global f_num\n    global math\n    math = \"multiplication\"\n    f_num = int(first_number)\n    e.delete(0, END)\ndef button_divide():\n    first_number = e.get()\n    global f_num",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_divide",
        "kind": 2,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "def button_divide():\n    first_number = e.get()\n    global f_num\n    global math\n    math = \"division\"\n    f_num = int(first_number)\n    e.delete(0, END)\n# Define Buttons\nbutton_1 = Button(root, text=\"1\", padx=40, pady=20,\n                  command=lambda: button_click(1))",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "root = Tk()\nroot.title(\"Calculator\")\ne = Entry(root, width=35, borderwidth=5)\ne.grid(row=0, column=0, columnspan=3, padx=10, pady=10)\n# e.insert(0, \"\")\ndef button_click(number):\n    # e.delete(0, END)\n    current = e.get()\n    e.delete(0, END)\n    e.insert(0, str(current) + str(number))",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "e",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "e = Entry(root, width=35, borderwidth=5)\ne.grid(row=0, column=0, columnspan=3, padx=10, pady=10)\n# e.insert(0, \"\")\ndef button_click(number):\n    # e.delete(0, END)\n    current = e.get()\n    e.delete(0, END)\n    e.insert(0, str(current) + str(number))\ndef button_clear():\n    e.delete(0, END)",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_1",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_1 = Button(root, text=\"1\", padx=40, pady=20,\n                  command=lambda: button_click(1))\nbutton_2 = Button(root, text=\"2\", padx=40, pady=20,\n                  command=lambda: button_click(2))\nbutton_3 = Button(root, text=\"3\", padx=40, pady=20,\n                  command=lambda: button_click(3))\nbutton_4 = Button(root, text=\"4\", padx=40, pady=20,\n                  command=lambda: button_click(4))\nbutton_5 = Button(root, text=\"5\", padx=40, pady=20,\n                  command=lambda: button_click(5))",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_2",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_2 = Button(root, text=\"2\", padx=40, pady=20,\n                  command=lambda: button_click(2))\nbutton_3 = Button(root, text=\"3\", padx=40, pady=20,\n                  command=lambda: button_click(3))\nbutton_4 = Button(root, text=\"4\", padx=40, pady=20,\n                  command=lambda: button_click(4))\nbutton_5 = Button(root, text=\"5\", padx=40, pady=20,\n                  command=lambda: button_click(5))\nbutton_6 = Button(root, text=\"6\", padx=40, pady=20,\n                  command=lambda: button_click(6))",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_3",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_3 = Button(root, text=\"3\", padx=40, pady=20,\n                  command=lambda: button_click(3))\nbutton_4 = Button(root, text=\"4\", padx=40, pady=20,\n                  command=lambda: button_click(4))\nbutton_5 = Button(root, text=\"5\", padx=40, pady=20,\n                  command=lambda: button_click(5))\nbutton_6 = Button(root, text=\"6\", padx=40, pady=20,\n                  command=lambda: button_click(6))\nbutton_7 = Button(root, text=\"7\", padx=40, pady=20,\n                  command=lambda: button_click(7))",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_4",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_4 = Button(root, text=\"4\", padx=40, pady=20,\n                  command=lambda: button_click(4))\nbutton_5 = Button(root, text=\"5\", padx=40, pady=20,\n                  command=lambda: button_click(5))\nbutton_6 = Button(root, text=\"6\", padx=40, pady=20,\n                  command=lambda: button_click(6))\nbutton_7 = Button(root, text=\"7\", padx=40, pady=20,\n                  command=lambda: button_click(7))\nbutton_8 = Button(root, text=\"8\", padx=40, pady=20,\n                  command=lambda: button_click(8))",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_5",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_5 = Button(root, text=\"5\", padx=40, pady=20,\n                  command=lambda: button_click(5))\nbutton_6 = Button(root, text=\"6\", padx=40, pady=20,\n                  command=lambda: button_click(6))\nbutton_7 = Button(root, text=\"7\", padx=40, pady=20,\n                  command=lambda: button_click(7))\nbutton_8 = Button(root, text=\"8\", padx=40, pady=20,\n                  command=lambda: button_click(8))\nbutton_9 = Button(root, text=\"9\", padx=40, pady=20,\n                  command=lambda: button_click(9))",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_6",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_6 = Button(root, text=\"6\", padx=40, pady=20,\n                  command=lambda: button_click(6))\nbutton_7 = Button(root, text=\"7\", padx=40, pady=20,\n                  command=lambda: button_click(7))\nbutton_8 = Button(root, text=\"8\", padx=40, pady=20,\n                  command=lambda: button_click(8))\nbutton_9 = Button(root, text=\"9\", padx=40, pady=20,\n                  command=lambda: button_click(9))\nbutton_0 = Button(root, text=\"0\", padx=40, pady=20,\n                  command=lambda: button_click(0))",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_7",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_7 = Button(root, text=\"7\", padx=40, pady=20,\n                  command=lambda: button_click(7))\nbutton_8 = Button(root, text=\"8\", padx=40, pady=20,\n                  command=lambda: button_click(8))\nbutton_9 = Button(root, text=\"9\", padx=40, pady=20,\n                  command=lambda: button_click(9))\nbutton_0 = Button(root, text=\"0\", padx=40, pady=20,\n                  command=lambda: button_click(0))\nbutton_add = Button(root, text=\"+\", padx=39, pady=20, command=button_add)\nbutton_equal = Button(root, text=\"=\", padx=91, pady=20, command=button_equal)",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_8",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_8 = Button(root, text=\"8\", padx=40, pady=20,\n                  command=lambda: button_click(8))\nbutton_9 = Button(root, text=\"9\", padx=40, pady=20,\n                  command=lambda: button_click(9))\nbutton_0 = Button(root, text=\"0\", padx=40, pady=20,\n                  command=lambda: button_click(0))\nbutton_add = Button(root, text=\"+\", padx=39, pady=20, command=button_add)\nbutton_equal = Button(root, text=\"=\", padx=91, pady=20, command=button_equal)\nbutton_clear = Button(root, text=\"Clear\", padx=79,\n                      pady=20, command=button_clear)",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_9",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_9 = Button(root, text=\"9\", padx=40, pady=20,\n                  command=lambda: button_click(9))\nbutton_0 = Button(root, text=\"0\", padx=40, pady=20,\n                  command=lambda: button_click(0))\nbutton_add = Button(root, text=\"+\", padx=39, pady=20, command=button_add)\nbutton_equal = Button(root, text=\"=\", padx=91, pady=20, command=button_equal)\nbutton_clear = Button(root, text=\"Clear\", padx=79,\n                      pady=20, command=button_clear)\nbutton_subtract = Button(root, text=\"-\", padx=41,\n                         pady=20, command=button_subtract)",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_0",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_0 = Button(root, text=\"0\", padx=40, pady=20,\n                  command=lambda: button_click(0))\nbutton_add = Button(root, text=\"+\", padx=39, pady=20, command=button_add)\nbutton_equal = Button(root, text=\"=\", padx=91, pady=20, command=button_equal)\nbutton_clear = Button(root, text=\"Clear\", padx=79,\n                      pady=20, command=button_clear)\nbutton_subtract = Button(root, text=\"-\", padx=41,\n                         pady=20, command=button_subtract)\nbutton_multiply = Button(root, text=\"*\", padx=40,\n                         pady=20, command=button_multiply)",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_add",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_add = Button(root, text=\"+\", padx=39, pady=20, command=button_add)\nbutton_equal = Button(root, text=\"=\", padx=91, pady=20, command=button_equal)\nbutton_clear = Button(root, text=\"Clear\", padx=79,\n                      pady=20, command=button_clear)\nbutton_subtract = Button(root, text=\"-\", padx=41,\n                         pady=20, command=button_subtract)\nbutton_multiply = Button(root, text=\"*\", padx=40,\n                         pady=20, command=button_multiply)\nbutton_divide = Button(root, text=\"/\", padx=41, pady=20, command=button_divide)\n# Put the buttons on the screen",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_equal",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_equal = Button(root, text=\"=\", padx=91, pady=20, command=button_equal)\nbutton_clear = Button(root, text=\"Clear\", padx=79,\n                      pady=20, command=button_clear)\nbutton_subtract = Button(root, text=\"-\", padx=41,\n                         pady=20, command=button_subtract)\nbutton_multiply = Button(root, text=\"*\", padx=40,\n                         pady=20, command=button_multiply)\nbutton_divide = Button(root, text=\"/\", padx=41, pady=20, command=button_divide)\n# Put the buttons on the screen\nbutton_1.grid(row=3, column=0)",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_clear",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_clear = Button(root, text=\"Clear\", padx=79,\n                      pady=20, command=button_clear)\nbutton_subtract = Button(root, text=\"-\", padx=41,\n                         pady=20, command=button_subtract)\nbutton_multiply = Button(root, text=\"*\", padx=40,\n                         pady=20, command=button_multiply)\nbutton_divide = Button(root, text=\"/\", padx=41, pady=20, command=button_divide)\n# Put the buttons on the screen\nbutton_1.grid(row=3, column=0)\nbutton_2.grid(row=3, column=1)",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_subtract",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_subtract = Button(root, text=\"-\", padx=41,\n                         pady=20, command=button_subtract)\nbutton_multiply = Button(root, text=\"*\", padx=40,\n                         pady=20, command=button_multiply)\nbutton_divide = Button(root, text=\"/\", padx=41, pady=20, command=button_divide)\n# Put the buttons on the screen\nbutton_1.grid(row=3, column=0)\nbutton_2.grid(row=3, column=1)\nbutton_3.grid(row=3, column=2)\nbutton_4.grid(row=2, column=0)",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_multiply",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_multiply = Button(root, text=\"*\", padx=40,\n                         pady=20, command=button_multiply)\nbutton_divide = Button(root, text=\"/\", padx=41, pady=20, command=button_divide)\n# Put the buttons on the screen\nbutton_1.grid(row=3, column=0)\nbutton_2.grid(row=3, column=1)\nbutton_3.grid(row=3, column=2)\nbutton_4.grid(row=2, column=0)\nbutton_5.grid(row=2, column=1)\nbutton_6.grid(row=2, column=2)",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "button_divide",
        "kind": 5,
        "importPath": "5-calculator",
        "description": "5-calculator",
        "peekOfCode": "button_divide = Button(root, text=\"/\", padx=41, pady=20, command=button_divide)\n# Put the buttons on the screen\nbutton_1.grid(row=3, column=0)\nbutton_2.grid(row=3, column=1)\nbutton_3.grid(row=3, column=2)\nbutton_4.grid(row=2, column=0)\nbutton_5.grid(row=2, column=1)\nbutton_6.grid(row=2, column=2)\nbutton_7.grid(row=1, column=0)\nbutton_8.grid(row=1, column=1)",
        "detail": "5-calculator",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "6-icons-images",
        "description": "6-icons-images",
        "peekOfCode": "root = Tk()\nroot.title('Using Icons, Images and Exit Buttons')\nroot.iconbitmap('./icons/codemy.ico')\nbutton_quit = Button(\n    root, text='Exit Program with root.quit()', command=root.quit)\nbutton_quit.pack()\npython_img = ImageTk.PhotoImage(Image.open('./images/python.png'))\npython_label = Label(image=python_img)\npython_label.pack()\nroot.mainloop()",
        "detail": "6-icons-images",
        "documentation": {}
    },
    {
        "label": "button_quit",
        "kind": 5,
        "importPath": "6-icons-images",
        "description": "6-icons-images",
        "peekOfCode": "button_quit = Button(\n    root, text='Exit Program with root.quit()', command=root.quit)\nbutton_quit.pack()\npython_img = ImageTk.PhotoImage(Image.open('./images/python.png'))\npython_label = Label(image=python_img)\npython_label.pack()\nroot.mainloop()",
        "detail": "6-icons-images",
        "documentation": {}
    },
    {
        "label": "python_img",
        "kind": 5,
        "importPath": "6-icons-images",
        "description": "6-icons-images",
        "peekOfCode": "python_img = ImageTk.PhotoImage(Image.open('./images/python.png'))\npython_label = Label(image=python_img)\npython_label.pack()\nroot.mainloop()",
        "detail": "6-icons-images",
        "documentation": {}
    },
    {
        "label": "python_label",
        "kind": 5,
        "importPath": "6-icons-images",
        "description": "6-icons-images",
        "peekOfCode": "python_label = Label(image=python_img)\npython_label.pack()\nroot.mainloop()",
        "detail": "6-icons-images",
        "documentation": {}
    },
    {
        "label": "forward",
        "kind": 2,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "def forward(image_number):\n    global my_label\n    global button_forward\n    global button_back\n    my_label.grid_forget()\n    my_label = Label(image=image_list[image_number-1])\n    button_forward = Button(\n        root, text=\">>\", command=lambda: forward(image_number+1))\n    button_back = Button(root, text=\"<<\", command=lambda: back(image_number-1))\n    if image_number == 5:",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "back",
        "kind": 2,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "def back(image_number):\n    global my_label\n    global button_forward\n    global button_back\n    my_label.grid_forget()\n    my_label = Label(image=image_list[image_number-1])\n    button_forward = Button(\n        root, text=\">>\", command=lambda: forward(image_number+1))\n    button_back = Button(root, text=\"<<\", command=lambda: back(image_number-1))\n    if image_number == 1:",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "root = Tk()\nroot.title('Using Icons, Images and Exit Buttons')\nroot.iconbitmap('./icons/codemy.ico')\npython_img = ImageTk.PhotoImage(Image.open('./images/python.png'))\npython_tkinter_img = ImageTk.PhotoImage(\n    Image.open('./images/python-tkinter.jpg'))\npython_scikitlearn_img = ImageTk.PhotoImage(\n    Image.open('./images/python-sckitlearn.jpeg'))\npython_flask_img = ImageTk.PhotoImage(Image.open('./images/python-flask.png'))\npython_django_img = ImageTk.PhotoImage(",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "python_img",
        "kind": 5,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "python_img = ImageTk.PhotoImage(Image.open('./images/python.png'))\npython_tkinter_img = ImageTk.PhotoImage(\n    Image.open('./images/python-tkinter.jpg'))\npython_scikitlearn_img = ImageTk.PhotoImage(\n    Image.open('./images/python-sckitlearn.jpeg'))\npython_flask_img = ImageTk.PhotoImage(Image.open('./images/python-flask.png'))\npython_django_img = ImageTk.PhotoImage(\n    Image.open('./images/python-django.png'))\npython_pyspark_img = ImageTk.PhotoImage(\n    Image.open('./images/python-pySpark.png'))",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "python_tkinter_img",
        "kind": 5,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "python_tkinter_img = ImageTk.PhotoImage(\n    Image.open('./images/python-tkinter.jpg'))\npython_scikitlearn_img = ImageTk.PhotoImage(\n    Image.open('./images/python-sckitlearn.jpeg'))\npython_flask_img = ImageTk.PhotoImage(Image.open('./images/python-flask.png'))\npython_django_img = ImageTk.PhotoImage(\n    Image.open('./images/python-django.png'))\npython_pyspark_img = ImageTk.PhotoImage(\n    Image.open('./images/python-pySpark.png'))\nimage_list = [python_img, python_tkinter_img, python_scikitlearn_img,",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "python_scikitlearn_img",
        "kind": 5,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "python_scikitlearn_img = ImageTk.PhotoImage(\n    Image.open('./images/python-sckitlearn.jpeg'))\npython_flask_img = ImageTk.PhotoImage(Image.open('./images/python-flask.png'))\npython_django_img = ImageTk.PhotoImage(\n    Image.open('./images/python-django.png'))\npython_pyspark_img = ImageTk.PhotoImage(\n    Image.open('./images/python-pySpark.png'))\nimage_list = [python_img, python_tkinter_img, python_scikitlearn_img,\n              python_flask_img, python_django_img, python_pyspark_img]\nmy_label = Label(image=image_list[0])",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "python_flask_img",
        "kind": 5,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "python_flask_img = ImageTk.PhotoImage(Image.open('./images/python-flask.png'))\npython_django_img = ImageTk.PhotoImage(\n    Image.open('./images/python-django.png'))\npython_pyspark_img = ImageTk.PhotoImage(\n    Image.open('./images/python-pySpark.png'))\nimage_list = [python_img, python_tkinter_img, python_scikitlearn_img,\n              python_flask_img, python_django_img, python_pyspark_img]\nmy_label = Label(image=image_list[0])\nmy_label.grid(row=0, column=0, columnspan=3)\nstatus_label = Label(",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "python_django_img",
        "kind": 5,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "python_django_img = ImageTk.PhotoImage(\n    Image.open('./images/python-django.png'))\npython_pyspark_img = ImageTk.PhotoImage(\n    Image.open('./images/python-pySpark.png'))\nimage_list = [python_img, python_tkinter_img, python_scikitlearn_img,\n              python_flask_img, python_django_img, python_pyspark_img]\nmy_label = Label(image=image_list[0])\nmy_label.grid(row=0, column=0, columnspan=3)\nstatus_label = Label(\n    root, text=f'Image 1 of {str(len(image_list))}', bd=1, relief=SUNKEN, anchor=E)",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "python_pyspark_img",
        "kind": 5,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "python_pyspark_img = ImageTk.PhotoImage(\n    Image.open('./images/python-pySpark.png'))\nimage_list = [python_img, python_tkinter_img, python_scikitlearn_img,\n              python_flask_img, python_django_img, python_pyspark_img]\nmy_label = Label(image=image_list[0])\nmy_label.grid(row=0, column=0, columnspan=3)\nstatus_label = Label(\n    root, text=f'Image 1 of {str(len(image_list))}', bd=1, relief=SUNKEN, anchor=E)\ndef forward(image_number):\n    global my_label",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "image_list",
        "kind": 5,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "image_list = [python_img, python_tkinter_img, python_scikitlearn_img,\n              python_flask_img, python_django_img, python_pyspark_img]\nmy_label = Label(image=image_list[0])\nmy_label.grid(row=0, column=0, columnspan=3)\nstatus_label = Label(\n    root, text=f'Image 1 of {str(len(image_list))}', bd=1, relief=SUNKEN, anchor=E)\ndef forward(image_number):\n    global my_label\n    global button_forward\n    global button_back",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "my_label",
        "kind": 5,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "my_label = Label(image=image_list[0])\nmy_label.grid(row=0, column=0, columnspan=3)\nstatus_label = Label(\n    root, text=f'Image 1 of {str(len(image_list))}', bd=1, relief=SUNKEN, anchor=E)\ndef forward(image_number):\n    global my_label\n    global button_forward\n    global button_back\n    my_label.grid_forget()\n    my_label = Label(image=image_list[image_number-1])",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "status_label",
        "kind": 5,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "status_label = Label(\n    root, text=f'Image 1 of {str(len(image_list))}', bd=1, relief=SUNKEN, anchor=E)\ndef forward(image_number):\n    global my_label\n    global button_forward\n    global button_back\n    my_label.grid_forget()\n    my_label = Label(image=image_list[image_number-1])\n    button_forward = Button(\n        root, text=\">>\", command=lambda: forward(image_number+1))",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "button_back",
        "kind": 5,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "button_back = Button(root, text=\"<<\", command=back, state=DISABLED)\nbutton_exit = Button(root, text=\"Exit Program\", command=root.quit)\nbutton_forward = Button(root, text=\">>\", command=lambda: forward(1))\nbutton_back.grid(row=1, column=0)\nbutton_exit.grid(row=1, column=1)\nbutton_forward.grid(row=1, column=2)\nstatus_label.grid(row=2, column=0, columnspan=3, sticky=W+E)\nroot.mainloop()",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "button_exit",
        "kind": 5,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "button_exit = Button(root, text=\"Exit Program\", command=root.quit)\nbutton_forward = Button(root, text=\">>\", command=lambda: forward(1))\nbutton_back.grid(row=1, column=0)\nbutton_exit.grid(row=1, column=1)\nbutton_forward.grid(row=1, column=2)\nstatus_label.grid(row=2, column=0, columnspan=3, sticky=W+E)\nroot.mainloop()",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "button_forward",
        "kind": 5,
        "importPath": "7-image-viewer",
        "description": "7-image-viewer",
        "peekOfCode": "button_forward = Button(root, text=\">>\", command=lambda: forward(1))\nbutton_back.grid(row=1, column=0)\nbutton_exit.grid(row=1, column=1)\nbutton_forward.grid(row=1, column=2)\nstatus_label.grid(row=2, column=0, columnspan=3, sticky=W+E)\nroot.mainloop()",
        "detail": "7-image-viewer",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "8-frames",
        "description": "8-frames",
        "peekOfCode": "root = Tk()\nroot.title('Frames')\nroot.iconbitmap('./icons/codemy.ico')\nframe = LabelFrame(root, padx=50, pady=50)\nframe.pack(padx=10, pady=10)\nb = Button(frame, text=\"Don't Click Here!\")\nb2 = Button(frame, text=\"...or here!\")\nb.grid(row=0, column=0)\nb2.grid(row=1, column=1)\nroot.mainloop()",
        "detail": "8-frames",
        "documentation": {}
    },
    {
        "label": "frame",
        "kind": 5,
        "importPath": "8-frames",
        "description": "8-frames",
        "peekOfCode": "frame = LabelFrame(root, padx=50, pady=50)\nframe.pack(padx=10, pady=10)\nb = Button(frame, text=\"Don't Click Here!\")\nb2 = Button(frame, text=\"...or here!\")\nb.grid(row=0, column=0)\nb2.grid(row=1, column=1)\nroot.mainloop()",
        "detail": "8-frames",
        "documentation": {}
    },
    {
        "label": "b",
        "kind": 5,
        "importPath": "8-frames",
        "description": "8-frames",
        "peekOfCode": "b = Button(frame, text=\"Don't Click Here!\")\nb2 = Button(frame, text=\"...or here!\")\nb.grid(row=0, column=0)\nb2.grid(row=1, column=1)\nroot.mainloop()",
        "detail": "8-frames",
        "documentation": {}
    },
    {
        "label": "b2",
        "kind": 5,
        "importPath": "8-frames",
        "description": "8-frames",
        "peekOfCode": "b2 = Button(frame, text=\"...or here!\")\nb.grid(row=0, column=0)\nb2.grid(row=1, column=1)\nroot.mainloop()",
        "detail": "8-frames",
        "documentation": {}
    },
    {
        "label": "clicked",
        "kind": 2,
        "importPath": "9-radio-buttons",
        "description": "9-radio-buttons",
        "peekOfCode": "def clicked(value):\n    myLabel = Label(root, text=value)\n    myLabel.pack()\n# Radiobutton(root, text=\"Option 1\", variable=r, value=1,\n#             command=lambda: clicked(r.get())).pack()\n# Radiobutton(root, text=\"Option 1\", variable=r, value=2,\n#             command=lambda: clicked(r.get())).pack()\n# myLabel = Label(root, text=pizza.get())\n# myLabel.pack()\nmyButton = Button(root, text='Click', command=lambda: clicked(pizza.get()))",
        "detail": "9-radio-buttons",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "9-radio-buttons",
        "description": "9-radio-buttons",
        "peekOfCode": "root = Tk()\nroot.title('Radio_Buttons')\nroot.iconbitmap('./icons/codemy.ico')\nr = IntVar()\nr.set(1)\nTOPPINGS = [\n    (\"Cheesy\", \"Cheesy\"),\n    (\"Pepperoni\", \"Pepperoni\"),\n    (\"Mushroom\", \"Mushroom\"),\n    (\"Dominator\", \"Dominator\"),",
        "detail": "9-radio-buttons",
        "documentation": {}
    },
    {
        "label": "r",
        "kind": 5,
        "importPath": "9-radio-buttons",
        "description": "9-radio-buttons",
        "peekOfCode": "r = IntVar()\nr.set(1)\nTOPPINGS = [\n    (\"Cheesy\", \"Cheesy\"),\n    (\"Pepperoni\", \"Pepperoni\"),\n    (\"Mushroom\", \"Mushroom\"),\n    (\"Dominator\", \"Dominator\"),\n]\npizza = StringVar()\npizza.set(\"Pepperoni\")",
        "detail": "9-radio-buttons",
        "documentation": {}
    },
    {
        "label": "TOPPINGS",
        "kind": 5,
        "importPath": "9-radio-buttons",
        "description": "9-radio-buttons",
        "peekOfCode": "TOPPINGS = [\n    (\"Cheesy\", \"Cheesy\"),\n    (\"Pepperoni\", \"Pepperoni\"),\n    (\"Mushroom\", \"Mushroom\"),\n    (\"Dominator\", \"Dominator\"),\n]\npizza = StringVar()\npizza.set(\"Pepperoni\")\nfor text, TOPPING in TOPPINGS:\n    Radiobutton(root, variable=pizza, value=TOPPING, text=text).pack(anchor=W)",
        "detail": "9-radio-buttons",
        "documentation": {}
    },
    {
        "label": "pizza",
        "kind": 5,
        "importPath": "9-radio-buttons",
        "description": "9-radio-buttons",
        "peekOfCode": "pizza = StringVar()\npizza.set(\"Pepperoni\")\nfor text, TOPPING in TOPPINGS:\n    Radiobutton(root, variable=pizza, value=TOPPING, text=text).pack(anchor=W)\ndef clicked(value):\n    myLabel = Label(root, text=value)\n    myLabel.pack()\n# Radiobutton(root, text=\"Option 1\", variable=r, value=1,\n#             command=lambda: clicked(r.get())).pack()\n# Radiobutton(root, text=\"Option 1\", variable=r, value=2,",
        "detail": "9-radio-buttons",
        "documentation": {}
    },
    {
        "label": "myButton",
        "kind": 5,
        "importPath": "9-radio-buttons",
        "description": "9-radio-buttons",
        "peekOfCode": "myButton = Button(root, text='Click', command=lambda: clicked(pizza.get()))\nmyButton.pack()\nroot.mainloop()",
        "detail": "9-radio-buttons",
        "documentation": {}
    }
]